<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
   //게시물 개수
   int getCount(String field, String query) throws ClassNotFoundException, SQLException;
   
   //전체 게시물
   List<Notice> getNotices(int page, String field, String query) throws ClassNotFoundException, SQLException;
   
   //게시물 상세
   Notice getNotice(String seq) throws ClassNotFoundException, SQLException;
   
   //게시물 삭제
   int delete(String seq) throws ClassNotFoundException, SQLException;
   
   //게시물 수정
   int update(Notice notice) throws ClassNotFoundException, SQLException;
   
   //게시물 입력
   int insert(Notice n) throws ClassNotFoundException, SQLException;
  -->

<mapper namespace="dao.NoticeDao">

  <select id="getCount" resultType="int">
        select count(*) from notices where ${param1} like '%${param2}'
  </select>
  

   <select id="getNotices" resultType="vo.Notice">
resultType="vo.Notice">
      SELECT * FROM
          ( SELECT ROWNUM NUM, N.* 
              FROM (
                     SELECT * 
                     FROM NOTICES 
                     WHERE ${param2} LIKE '%${param3}%' ORDER BY REGDATE DESC
                    ) N
             ) WHERE NUM BETWEEN 1 + (${param1}-1)*5 AND 5 + (${param1}-1)*5
   </select>

   
   <!-- 상세
   Notice getNotice(String seq)
   parameter 1개 생략가능 -->
   <select id="getNotice" resultType="vo.Notice">
        select seq, title, writer, content, redate, hit, fileSrc, fileSrc2
         from notices 
         where seq= #{seq}
  </select>
  
   <!-- 삭제
   int delete(String seq)
   parameter 1개 생략가능 -->
   <delete id="delete">
        delete from notices where seq=#{seq}
  </delete>
  


	<!-- int upadate(Notice notice) 게시물 수정 파일 수정 : null, null 1개 수정 : 1.jpg, 
		null 1개 수정 : null, 2.jpg 특정한 값이 넘어오지 않으면 null값 처리 -->
	<update id="update" parameterType="vo.Notice">
		update notices
		set title=#{title},
		content=#{content},
		filesrc = #{fileSrc, jdbcType = VARCHAR},
		filesrc2=#{fileSrc2, jdbcType=VARCHAR}
		where seq=#{seq}
	</update>
	<!-- 입력 int insert(Notice n) -->
	<insert id="insert" parameterType="vo.Notice">
		<selectKey order="BEFORE" keyProperty="seq"
			resultType="String">
			select max(to_number(seq))+1 from notices
		</selectKey>
		insert into notices(seq, title, content, writer, regdate, hit,
		fileSrc, fileSrc2)
		values(#{seq}, #{title}, #{content}, springuser, sysdate, 0, #{fileSrc},
		#{fileSrc2})

	</insert>

</mapper>