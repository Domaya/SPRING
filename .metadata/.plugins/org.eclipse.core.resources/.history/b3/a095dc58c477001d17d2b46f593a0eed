package ncontroller;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import dao.NoticeDao;
import vo.Notice;


@Controller
public class CustomerController {
	private NoticeDao noticsdao;
	@Autowired
	public void setNoticsdao(NoticeDao noticsdao) {
		this.noticsdao = noticsdao;
	}
	
	//게시판 리스트
	@RequestMapping("/customer/notice.htm")
	public ModelAndView noticelist(@RequestParam(value="pg", defaultValue = "1") String pg,
			 												  @RequestParam(value ="f", defaultValue = "TITLE") String f,
			 												  @RequestParam(value="p", defaultValue="%%") String p) {
		//System.out.println("테스트");
		
		String page = pg;
		String field = f;
		String query = p;

		List<Notice>  list = null;
		
		//System.out.println("pg : " + pg + " / f : " + f + " / query : " + p);
		//DAO 작업
		try {
			list = noticsdao.getNotices(Integer.parseInt(page), field, query);
		}catch (Exception e) {
			e.printStackTrace();
		}
		
		ModelAndView   mv = new ModelAndView();
		mv.addObject("list", list);
		mv.setViewName("notice.jsp");
		
		return  mv;
	}
	
	//글 상세보기
	@RequestMapping("/customer/noticeDetail.htm")
	public ModelAndView noticeDetail(@RequestParam(value="seq", defaultValue = "") String query) {
		
		//System.out.println("param query: " + query);
		String seq = query;
		Notice notice = null;
		try {
			notice = noticsdao.getNotice(seq);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		ModelAndView  mv = new ModelAndView();
		
		mv.addObject("notice", notice);
		mv.setViewName("noticeDetail.jsp");
		
		
		return mv;
	}
	

	//글쓰기
	//@RequestMapping("/noticeReg.htm")
	@GetMapping(value="customer/noticeReg.htm")
	public String noticeReg() {
			System.out.println("GET noticeReg.htm");
			return  "noticeReg.jsp";
	}
	
	//글쓰기 처리(POST)
		//Notice  DTO 활용 
		//import org.springframework.web.multipart.commons.CommonsMultipartFile; 활용하기
		//upload 폴더는  request.getServletContext().getRealPath("/customer/upload"); //배포된 서버 경로 
		
		//private String fileSrc; 업로드 파일명
		//noticedao.insert() 함수사용 
		
		//글쓰기 처리 한다음 .... 
		//Servlet , jsp : location.href or  response.sendRedirect 
		//같은 기능을 스프링에서는 
		// return "redirect:notice.htm"
		
		//@RequestMapping(value="noticeReg.htm",  method = RequestMethod.POST)
	//wirteok
	@PostMapping(value="customer/noticeReg.htm")
	public String noticeReg(Notice n , HttpServletRequest request) {
		System.out.println("POST MAPPING");
		 System.out.println(n.toString());
		 
		 
		    String filename =n.getFile().getOriginalFilename();
			String path = request.getServletContext().getRealPath("/customer/upload"); //배포된 서버 경로 
			String fpath = path + "\\" + filename;
			System.out.println(fpath);
			
			FileOutputStream fs =null;
			try {
				     fs = new FileOutputStream(fpath);
				     fs.write(n.getFile().getBytes());
				     
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}finally {
				 try {
					fs.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			
			//파일명 (DTO)
			n.setFileSrc(filename);
			
			try {
					noticsdao.insert(n);  //DB insert
			} catch (Exception e) {
				e.printStackTrace();
			} 
			
			//insert 나 update 하고 나면 ...(F5 누르면 계속 글이 ..Write)
			//리스트 (location.href    or   redirect )
			//서버에게 새로운 요청 ...목록보기
			//String :   redirect:notice.htm   
			//Servlet , jsp  :   location.href  or   response.sendRedirect 
			
			
		  return "redirect:notice.htm";
	}
	
	
	//글 수정하기
	//<a class="btn-edit button" href="noticeEdit.htm?seq=${notice.seq}">수정</a>
	@GetMapping(value="noticeEdit.htm")
	public String noticeEdit(String seq, Model model) {
		System.out.println("GET : noticeEdit");
		return null;
	}
	
	//글 수정ok   href="noticeEdit.htm?seq=${notice.seq}" POST
	@PostMapping(value="noticeEdit.htm")
	public String noticeEdit(Notice n, HttpServletRequest request) {
		System.out.println("POST : noticeEdit");
		return null;
	}
	
}
